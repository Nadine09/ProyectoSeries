<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SeriesApp_DAL</name>
    </assembly>
    <members>
        <member name="M:SeriesApp_DAL.Connection.ConnectionProvider.getConnection">
            <summary>
            Método que crea y devuelve una conexión con la base de datos
            </summary>
            <returns>Una conexión abierta con la base de datos</returns>
        </member>
        <member name="M:SeriesApp_DAL.Connection.ConnectionProvider.openConnection(Microsoft.Data.SqlClient.SqlConnection)">
            <summary>
            Método que abre la conexion pasada por parámetros
            Precondiciones: La conexión no debe ser nula
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:SeriesApp_DAL.Connection.ConnectionProvider.closeConnection(Microsoft.Data.SqlClient.SqlConnection)">
            <summary>
            Este metodo cierra una conexión con la Base de datos
            </summary>
            <post>La conexion es cerrada</post>
            <param name="connection">SqlConnection pr referencia. Conexion a cerrar
            </param>
        </member>
        <member name="M:SeriesApp_DAL.DAO.GenericAbstractDAO.StartQuery(Microsoft.Data.SqlClient.SqlConnection@,Microsoft.Data.SqlClient.SqlCommand@,Microsoft.Data.SqlClient.SqlDataReader@,System.String)">
            <summary>
            Este método inicializa todo lo necesario para realizar una consulta. Crea y abre una conexión y la asigna a sqlConnection.
            </summary>
            <param name="sqlConnection"></param>
            <param name="sqlCommand"></param>
            <param name="sqlDataReader"></param>
            <param name="command"></param>
        </member>
        <member name="M:SeriesApp_DAL.DAO.GenericAbstractDAO.CloseAll(Microsoft.Data.SqlClient.SqlConnection@,Microsoft.Data.SqlClient.SqlDataReader@)">
            <summary>
            Este método cierra la SqlConnection y el SqlDataReader pasados por parámetros
            </summary>
            <param name="sqlConnection"></param>
            <param name="sqlDataReader"></param>
        </member>
        <member name="M:SeriesApp_DAL.DAO.GenericAbstractDAO.ExecuteNonQuery(System.String)">
            <summary>
            Este método ejecutará la instruccion pasada por parámetros
            </summary>
            <param name="command">Instrucción que se ejecutará</param>
        </member>
        <member name="M:SeriesApp_DAL.DAO.GenericDAO`1.GetAll">
            <summary>
            Este método usa la propiedad cmdSelectAll, ejecuta la consulta y devuelve la lista de objetos T
            </summary>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.GenericDAO`1.GetById(System.Int64)">
            <summary>
            Este método usa la propiedad cmdSelectById, reemplaza @id en la cadena por el id dado y ejecuta la consulta. Devuelve un único objeto T
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.GenericDAO`1.ExecuteQueryOneObject(System.String)">
            <summary>
            Este método ejecuta una consulta que devuelve un único objeto T. La consulta será el string command pasado por parámetros.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.GenericDAO`1.ExecuteQuery(System.String)">
            <summary>
            Este método ejecuta una consulta que devuelve una lista de objetos T. La consulta será el string command pasado por parámetros.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.GenericDAO`1.executeQueryGetInt(System.String)">
            <summary>
            Este método ejecuta una consulta que devuelve un único valor int. La consulta será el string command pasado por parámetros.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.GenericDAO`1.BuildObject(Microsoft.Data.SqlClient.SqlDataReader)">
            <summary>
            Este método crea un objeto con los valores del sqlReader.
            </summary>
            <param name="sqlDataReader">Objeto SqlDataReader en el que se buscarán los valores para crear el objeto</param>
            <returns>Objeto creado</returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.GenreDAO.GetBySeries(System.Int64)">
            <summary>
            Este método obtiene los géneros a los que pertenece una serie por su id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.SeriesDAO.GetTop10">
            <summary>
            Obtiene las 10 series mejor calificadas
            </summary>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.SeriesDAO.GetByUser(System.Int64)">
            <summary>
            Obtiene las series que está viendo un usuario por su id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.SeriesDAO.episodesPerSeason(System.Int64)">
            <summary>
            Obtiene una lista de las temporadas (nº orden) y el numero de episodios que contienen
            </summary>
            <param name="idSerie"></param>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.UserDAO.ValidateEmail(System.String)">
            <summary>
            Valida el email dado. Si el email ya está en uso devolverá FALSE, en caso contrario, TRUE.
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.UserDAO.GetUserByEmailAndPassword(System.String,System.String)">
            <summary>
            Obtiene (si existe) el usuario por su email y constraseña
            </summary>
            <param name="email"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.UserDAO.CreateUser(SeriesApp_Entities.Classes.ClsUser)">
            <summary>
            Este método inserta un usuario en la base de datos y devuelve el usuario insertado 
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:SeriesApp_DAL.DAO.UsersEpisodesDAO.AddProgress(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Este método inserta en la tabla NAD_UsersEpisodes una fila por cada episodio que el usuario a visto.
            Se usan los parámetros season y episode para saber cúal es el último episodio que a visto.
            </summary>
            <param name="idSerie">Id de la serie</param>
            <param name="season">Temporada del último episodio que ha visto</param>
            <param name="episode">Último episodio que ha visto el usuario</param>
            <param name="userId">Id del usuario</param>
        </member>
        <member name="M:SeriesApp_DAL.DAO.UsersEpisodesDAO.LastEpisode(System.Int64,System.Int64,System.Int32@,System.Int32@)">
            <summary>
            Este método busca el último episodio que ha visto el usuario con el id dado (idUser) de la serie indicada (idSerie) 
            y mete los valores en los parámetros season (el número de temporada) y episode (el número de episodio)
            </summary>
            <param name="idUser"></param>
            <param name="idSerie"></param>
            <param name="season"></param>
            <param name="episode"></param>
        </member>
        <member name="M:SeriesApp_DAL.DAO.UsersEpisodesDAO.UpdateProgress(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Este método inserta los capitulos de episodio minEpisode (no incluido) hasta episodio maxEpisode (incluido) de la temporada dada (season) para la serie y el usuario indicados.
            </summary>
            <param name="idSerie"></param>
            <param name="season"></param>
            <param name="minEpisode"></param>
            <param name="maxEpisode"></param>
            <param name="userId"></param>
            <param name="increasedProgress"></param>
        </member>
        <member name="M:SeriesApp_DAL.DAO.UsersEpisodesDAO.UpdateProgress(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Este método inserta los capitulos desde episodio minEpisode temporada minSeason (no incluido) hasta episodio maxEpisode temporada maxSeason (incluido) de la temporada dada (season) para la serie y el usuario indicados.
            </summary>
            <param name="idSerie"></param>
            <param name="minSeason"></param>
            <param name="maxSeason"></param>
            <param name="minEpisode"></param>
            <param name="maxEpisode"></param>
            <param name="userId"></param>
            <param name="increasedProgress"></param>
        </member>
    </members>
</doc>
